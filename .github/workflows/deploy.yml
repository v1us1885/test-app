name: CI/CD Deploy

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
    paths:
      - 'test-app/**'

env:
  REGISTRY: docker.io
  IMAGE_NAME: v1rus1885/test-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          registry: ${{ env.REGISTRY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./test-app
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, github.ref_name) || '' }}

  deploy:
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/')  # Деплой только для тегов
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Yandex CLI
        env:
          YC_SA_JSON_CREDENTIALS: ${{ secrets.YC_SA_KEY_INIT }}
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -a
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Configure YC credentials
        run: |
          echo "${{ secrets.YC_SA_KEY_INIT }}" | base64 -d > sa-key.json
          yc config set service-account-key sa-key.json

      - name: Configure kubeconfig
        run: |
          yc managed-kubernetes cluster get-credentials \
            --name mks-cluster \
            --folder-id b1ga79lki1s68b3r289b \
            --external \
            --context-name k8s-deploy-context \
            --force
          kubectl config use-context k8s-deploy-context

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/test-app test-app=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          kubectl rollout status deployment/test-app

      - name: Wait for pods to be ready
        run: |
          echo "Ждем, пока поды запустятся..."
          kubectl rollout status deployment/test-app -n default 
